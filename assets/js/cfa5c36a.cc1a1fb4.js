"use strict";(self.webpackChunktech_foundations=self.webpackChunktech_foundations||[]).push([[1209],{3905:function(e,t,n){n.d(t,{Zo:function(){return m},kt:function(){return h}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),u=c(n),h=a,d=u["".concat(l,".").concat(h)]||u[h]||p[h]||i;return n?r.createElement(d,o(o({ref:t},m),{},{components:n})):r.createElement(d,o({ref:t},m))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},72205:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return m},default:function(){return u}});var r=n(87462),a=n(63366),i=(n(67294),n(3905)),o=["components"],s={sidebar_position:0},l="The Central Processing Unit",c={unversionedId:"computing/computer-hardware/the-central-processing-unit",id:"computing/computer-hardware/the-central-processing-unit",isDocsHomePage:!1,title:"The Central Processing Unit",description:"Summary",source:"@site/docs/computing/computer-hardware/the-central-processing-unit.md",sourceDirName:"computing/computer-hardware",slug:"/computing/computer-hardware/the-central-processing-unit",permalink:"/tech-foundations-learner-guide/docs/computing/computer-hardware/the-central-processing-unit",editUrl:"https://github.com/generation-org/tech-foundations/edit/main/docs/computing/computer-hardware/the-central-processing-unit.md",tags:[],version:"current",sidebarPosition:0,frontMatter:{sidebar_position:0},sidebar:"computingSidebar",previous:{title:"Talking like a computer",permalink:"/tech-foundations-learner-guide/docs/computing/binary-code/talking-like-a-computer"},next:{title:"Storage",permalink:"/tech-foundations-learner-guide/docs/computing/computer-hardware/storage"}},m=[{value:"Summary",id:"summary",children:[{value:"Objectives",id:"objectives",children:[],level:3},{value:"Key Points",id:"key-points",children:[],level:3}],level:2},{value:"Breakdown",id:"breakdown",children:[{value:"Transistors",id:"transistors",children:[],level:3},{value:"Logic gates",id:"logic-gates",children:[],level:3},{value:"Layers of abstraction",id:"layers-of-abstraction",children:[],level:3},{value:"Specialisation",id:"specialisation",children:[],level:3}],level:2}],p={toc:m};function u(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"the-central-processing-unit"},"The Central Processing Unit"),(0,i.kt)("h2",{id:"summary"},"Summary"),(0,i.kt)("h3",{id:"objectives"},"Objectives"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"By the end of this session you should be able to:")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Introduce logic gates"),(0,i.kt)("li",{parentName:"ul"},"Describe what a transistor is"),(0,i.kt)("li",{parentName:"ul"},"Describe how transistors can be arranged into logic gates"),(0,i.kt)("li",{parentName:"ul"},"Explain what a CPU Architecture is")),(0,i.kt)("h3",{id:"key-points"},"Key Points"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Logic Gates are devices that combine binary inputs together using fixed rules."),(0,i.kt)("li",{parentName:"ul"},"Transistors are small electrical devices that we use as switches in modern computers."),(0,i.kt)("li",{parentName:"ul"},"Logic Gates can be made out of transistors.",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"This is an example of abstraction."))),(0,i.kt)("li",{parentName:"ul"},"A computer itself is made of several layers of abstraction.")),(0,i.kt)("h2",{id:"breakdown"},"Breakdown"),(0,i.kt)("h3",{id:"transistors"},"Transistors"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Transistors")," are simple electronic components. They have three pins, and current - electricity - can flow between the first two when electricity is applied to the third. For this reason they are often thought of like electronically-activated switches."),(0,i.kt)("p",null,"The Transistor became the dominant method for switching in circuits, and we can squeeze lots of transistors into a ",(0,i.kt)("em",{parentName:"p"},"microchip"),". Transistors can be arranged into complex circuits like the ",(0,i.kt)("em",{parentName:"p"},"full adder"),", which can take binary numbers and add them together! This is the basis of all modern computers."),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Transistors are made with ",(0,i.kt)("em",{parentName:"p"},"silicon"),', a product made from sand. This is the "silicon" in "silicon valley" - the name comes from the large quantity of microchips needed by the fast-growing tech companies in the San Francisco Bay Area.'),(0,i.kt)("p",{parentName:"div"},'You might hear some people joke that we\'re "making sand do maths" - which is sort-of true!'))),(0,i.kt)("h3",{id:"logic-gates"},"Logic gates"),(0,i.kt)("p",null,"As computers got more complex, we needed a way of ",(0,i.kt)("em",{parentName:"p"},"abstracting")," away the complexity by representing it in simpler terms. We created ",(0,i.kt)("em",{parentName:"p"},"logic gates"),", which are arrangements of transistors that can complete simple logical functions like AND, OR and NOT. Using a series of logic gates we can design instructions like adders, subtractors and multiplers - as well as far more complex circuits."),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Abstraction is an important concept in tech. Trying to understand computers as a series of switching transistors is basically impossible, let alone programming them as such. For this reason, we come up with ",(0,i.kt)("em",{parentName:"p"},"models")," which allow us to ignore the underlying complexity."),(0,i.kt)("p",{parentName:"div"},"The network stack is another example of abstraction"))),(0,i.kt)("h3",{id:"layers-of-abstraction"},"Layers of abstraction"),(0,i.kt)("p",null,'There are many other layers of abstraction between a transistor and your first "Hello World" program:'),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Instructions - arrangements of logic gates - are captured in ",(0,i.kt)("strong",{parentName:"li"},"instruction sets"),", which are then built into a microchip which we call the ",(0,i.kt)("em",{parentName:"li"},"processor"),"."),(0,i.kt)("li",{parentName:"ul"},"An ",(0,i.kt)("strong",{parentName:"li"},"Assembly language")," is written which commands these instructions in a way that a human can read."),(0,i.kt)("li",{parentName:"ul"},"While some applications are written directly in Assembly, ",(0,i.kt)("strong",{parentName:"li"},"Low-level programming languages")," like C are written to make programming easier than directly commanding the instructions on the processor."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"High-level programming languages")," like Python are then written which seek to make programming even more  human-friendly!")),(0,i.kt)("p",null,'A "Hello World" program written in Python is ',(0,i.kt)("em",{parentName:"p"},"interpreted")," by the Python interpreter, which is written in C. This then ",(0,i.kt)("em",{parentName:"p"},"compiles")," the program to Assembly language, which directly commands the instructions in the CPU's ",(0,i.kt)("em",{parentName:"p"},"instruction set"),". These instructions are arrangements of logic gates, which themselves are just arrangements of transistors."),(0,i.kt)("h3",{id:"specialisation"},"Specialisation"),(0,i.kt)("p",null,"Computers are very complex machines. Not only have we made them human-friendly through layers of abstraction, we have different engineers specialising in different layers of the stack. ",(0,i.kt)("em",{parentName:"p"},"Nobody understands the full stack in depth")," - but having an awareness of it, and a curiosity about how problems are solved in different parts of it, will make you a better engineer."))}u.isMDXComponent=!0}}]);